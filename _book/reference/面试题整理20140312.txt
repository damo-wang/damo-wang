2.邮箱地址合法性校验
描述：输入一个电子邮箱地址字符串，要求检查这个邮箱地址是否合法。如果输入的电子邮箱地址是合法的，输出字符串“1”；如果不合法输出字符串“0”
满足如下条件被认为是合法的邮箱地址：
(1.仅包含一个“@”字符
(2.最后三个字符必须是“.com”
(3.字符之间没有空格
(4.有效字符为1~9、a~z、A~Z、"."、"@"、"_"
内存限制128M
输入：字符串
输出：是否是有效邮箱名
样例：输入wang_yj@3gosc.com	输出1

3.13世纪意大利数学家斐波那契在他的《算盘书》中提出这样一个问题：有人想知道一年内一对兔子可繁殖成多少对，便筑了一道围墙把一对兔子关在里面。已知一对兔子每一个月可以生一对小兔子，而一对兔子出生后.第三个月开始生小兔子假如一年内没有发生死亡，则一对兔子一年内能繁殖成多少对？

4.更新后兔子问题：已知一对兔子每一个月可以生一对小兔子，而一对兔子出生三个月后开始生小兔子，并且兔子寿命是六个月，即第七个月死亡，则一对兔子一年内能繁殖成多少对？



5.
小明的筷子
描述:	
    小明是个马大哈，某天他到超市买了若干双筷子(小于20)
    筷子的长度不尽相同，他把全部筷子都放在购物袋里面拿回家，路上不小心漏了一根
    请你用程序帮他找出漏掉的筷子是多长的。
     
题目类别:	循环
难度:	初级
分数:	60
运行时间限制:	无限制
内存限制:	无限制
阶段:	应聘考试
输入:	
第一行:非负的整数, 剩下的筷子的根数; 例如:7
第二行:剩下的筷子的各个长度值。例如：1 2 3 2 1 3 2(每一根筷子的长度必然大于0, 不需要校验)
建议：读入输入的整数的时候，不要读入换行符（'\n'）
输出:	
漏掉的筷子的长度，如上述输入返回：2
当输入的数据异常时输出-1，如：找不到漏掉的筷子
备注:如果漏掉了多根筷子，返回任意一根漏掉的筷子即可。
输出整数后，不需要输出换行符。
 
样例输入:	
7

1 2 3 2 1 3 2
样例输出:	
2
答案提示:	
 
6.
逆序链表输出
描述:	
输入一个单向链表，将链表逆序后输出各结点的值。
链表结点结构定义如下：
typedef struct tagListNode
{
    int value;
    struct tagListNode *next;
}ListNode;
题目类别:	链表
难度:	中级
分数:	100
运行时间限制:	60 Sec
内存限制:	256 MByte
阶段:	应聘考试
输入:	
顺序输入链表的各结点，用逗号(",")作为结点数据的分隔符；
 
例如：链表1->2->3->4->5，输入为："1,2,3,4,5"
输出:	
逆序后链表的各结点，用逗号(",")作为结点数据的分隔符；
 
例如上述链表逆序后为5->4->3->2->1，输出为："5,4,3,2,1"
 
样例输入:	
1,2,3,4,5
样例输出:	
5,4,3,2,1
答案提示:	
 
4-19-1
密码截取
描述: 	

Catcher是MCA国的情报员，他工作时发现敌国会用一些对称的密码进行通信，比如像这些ABBA，ABA，A，123321，但是他们有时会在开始或结束时加入一些无关的字符以防止别国破解。比如进行下列变化 ABBA->12ABBA,ABA->ABAKK,123321->51233214　。因为截获的串太长了，而且存在多种可能的情况（abaaab可看作是aba,或baaab的加密形式），Cathcer的工作量实在是太大了，他只能向电脑高手求助，你能帮Catcher找出最长的有效密码串吗？
题目类别: 	字符串,循环
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	
字符串-密码内容
输出: 	
整形数-有效密码串最大长度
样例输入: 	
ABBA
样例输出: 	
4
答案提示: 	

4-19-2
取一个整数数组（数组元素个数不小于2）中最大和次大的二个数
描述: 	输入一个整数数组，依次输出数组中数值最大和数值第二大的元素。
运行时间限制: 	60 Sec
内存限制: 	256 MByte
输入: 	    整型数组；
    输入限制：
    （1）输入字符串长度不超过128；
    （2）输入的数组元素使用逗号(",")进行分隔；
输出: 	    依次输出输入数组中最大的数和次大的数；
    输出格式：最大的数,次大的数；
    输出限制：
    （1）如果输入数组的元素个数为0，则最大数和次大数都为0；
    （2）如果输入数组的元素个数为1，则最大数和次大数相同；
    （3）如果输入数组的元素个数大于或等于2，且所有元素相同，则最大数和次大数相同；
    例如：
    输入：6,3,5,8   输出：8,6
    输入：7         输出：7,7
    输入：6,6,6     输出：6,6

样例输入: 	
6,3,5,8

样例输出: 	

8,6

答案提示: 	

///////////////////////////////////////////////////////////////////
解析9进制，11进制的字符串为10进制的数字输出
描述: 	

解析9进制，11进制的字符串为10进制的数字输出，输入的字符串有效位(0v0012345678)长度不超过8位，前面的00不算做有效位。解析后以10进制的数字输出。
如果解析到非法字符串则返回-1 

9进制：
 9进制的数的范围：0,1,2,3,4,5,6,7,8
 9进制的开始为:0V或者0v
 9进制的正确实例：0V11 0v564 0V123 0v0784 0V0 0v 0V
 9进制的错误实例：0V923 0vt12 00V21 0123 
 9进制转换为10进制：0V11 -> 10
        0v564 -> 463
 
11进制：
 11进制的数的范围：0,1,2,3,4,5,6,7,8,9,A(a)
 11进制的开始为:0W或者0w
 11进制的正确实例：0W11 0w564 0W123 0w0A8a 0W 0w
 11进制的错误实例：0WB923 0wVaA 00W21 0WAx123 
 11进制转换为10进制：
        0W11 -> 12
        0w564 -> 675
题目类别: 	字符串
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

 输入为一行9进制或11进制的字符串，格式如上述
输出: 	

 输出为10进制的数字
样例输入: 	

0w564

样例输出: 	

675

答案提示: 	

///////////////////////////////////////////////////////////////////////
心有灵犀一点通
描述: 	

在某相亲节目现场，有n(1≤n≤500)对善男俊女,为测试男女双方心有灵犀程度,主持人想出了一个很有意思的游戏：主持人在地上画出一排(共2n个)格子，每个格子里都写着一个整数Ai(1≤Ai≤500)。游戏开始后，让他们任意地站成一排(可能会有两个人站在了同一个格子里)。等他们都站好以后，司仪开始计算他们每个人自己的得分，记分规则是：男方的分数等于把从自己所站的位置开始一直累加到开头，女方的分数等于从自己所站位置开始一直累加到末尾。如果某一对男女的得分数是相同的，那他们得默契度较高,比较有缘,交友成功率也高。比如，有3对男女，地上的那一排数字为:3，6，2，4，5，2。如果男方站在第三个位置(2)，他的得分为：3+6+2=11；女方站在第4个位置(4)，她的得分为4+5+2=11。两人得分相同，就认为两人很有默契。或者男方站第6个位置(2)，女方站第1个位置(3)，他们的得分都等于22，也很有默契。如果你朋友在节目现场，那么请你帮他/她算一算有多少种站法可以迅速有机会找到那个默契的她/他（参数不合法返回-1）。
题目类别: 	循环
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

第一行一个整数n，代表善男信女的对数。

第二行有一批整数N，代表地上的数字。注意：如果N不等于2*n，输出-1。
输出: 	

输出共有几种站法。

输入数据不合法，输出-1。
样例输入: 	

3
3 6 2 4 5 2

样例输出: 	

2

答案提示: 	

//////////////////////////////////////////////////// 
04-22-1
实现一个开放的书名检索库
描述: 	

实现一个开放的书名检索库，库中存储了若干个书名

用户可以：
    1、通过接口加入书名
    2、指定搜索条件搜索库中符合条件的书名

 

重要格式说明
单词：
    由小写英文字母组成，不含其它字符

书名：
    由一个或多个单词组成
    当包含多个单词时，单词间用一个空格分隔

    第一个单词前和最后一个单词后没有空格
    若只包含一个单词，则该单词前后均无空格

 

搜索条件：
    1、由一个或多个不重复的关键字组成，每个关键字是一个单词。
    2、当包含多个关键字时，关键字间用一个空格分隔；第一个关键字前和最后一个关键字后没有空格
    3、若只包含一个关键字，则该关键字前后均无空格
    4、搜索包含指定关键字的书名，输出不需要排序（不影响自动阅卷）
    5、若搜索条件包含多个关键字，它们之间是“与”的关系，即书名中要同时包含所有指定的关键字（但不限制关键字在书名中出现的位置和顺序）
    6、必须是“全词匹配”，即书名中的单词和关键字完全一致，例如：关键字为man，书名中包括单词woman，则不认为该书名符合搜索要求

 

输出说明:

   1. 如果没有查找到书名，那么输出一对双引号： ""

   2. 如果存在多行输出（查找到多本书名），那么输出结果按字典序排序

 
举例

 

输入:

AddBooks
"high performance mysqlsecond edition"
"writing gnu emacs extensions"
"web client programming with perlautomating tasks"
"net test automation recipes a problem solution approach"
"photoreading"
"pro wfwindows workflow in net"
"aspect oriented analysis and design the theme approach"
SearchBooks 

"extensions gnu"

End

输出：

"writing gnu emacs extensions"

 

输入:

AddBooks
"high performance mysqlsecond edition"
"writing gnu emacsextensions"
"web client programming with perlautomating tasks"
"net test automation recipes a problem solution approach"
"photoreading"
"pro wfwindows workflow in net"
"aspect oriented analysis and design the theme approach"
SearchBooks

"approach"

End

输出：

"aspect oriented analysis and design the theme approach"

"net test automation recipes a problem solution approach"


 

规格

 0<=书名个数范围<=200 
    1<=书名所含单词个数<=10
    1<=单词所含字母数<=50
    1<=搜索条件中关键字个数<=3

 

 
题目类别: 	语言基础,字符串,循环,函数,指针,枚举,位运算,结构体,联合体,文件操作,递归
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

AddBooks

[书名列表:每行一个书名，书名在双引号中]

SearchBooks

[关键字:多个关键字用空格分隔，关键字在双引号中]

End

 
输出: 	

1. 查找到的书名，查找到多个书名，以多行显示，书名在双引号内

2. 如果没有查找到书名，那么输出： ""

3. 如果存在多行输出（查找到多本书名），那么输出结果按字典序排序

    如下：

    "aspect oriented analysis and design the theme approach"

    "net test automation recipes a problem solution approach"


    字母a 在字典序中排在字母n前面，所以显示的时候 "aspect oriented analysis and design the theme approach"排在前面

    如果一个字符相等，那么顺序比较后面的字符，直到找到一个字符不相等为止
样例输入: 	

AddBooks
"high performance mysqlsecond edition"
"writing gnu emacs extensions"
"web client programming with perlautomating tasks"
"net test automation recipes a problem solution approach"
"photoreading"
"pro wfwindows workflow in net"
"aspect oriented analysis and design the theme approach"
SearchBooks
"extensions gnu"
End

样例输出: 	

"writing gnu emacs extensions"

答案提示: 	

////////////////////////////////////////////////////////////////////////////
04-22-2
字符串按要求逆序
描述: 	

    转换字符串（由数字、字母和空格组成），将字符串中以空格分隔的单词（连续英文字母）倒序，其它字符不变。    

   【注意】 只对连续字母组做倒序转换。如"He is a man123"，输出结果应该为"eH si a nam123"
题目类别: 	字符串
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

输入字符串，形式如"He is a man"
输出: 	

输出字符串，输入字符串"He is a man"的预期输出为"eH si a nam"
样例输入: 	

He is a man

样例输出: 	

eH si a nam

答案提示: 	


0429-1
外星人比数的大小
描述: 	

来自星星的都教授除了所有感官比地球人高出七倍，始终容颜不老以外，还拥有一项在地球人看来特别神奇的能力，他会瞬间(0.00000000000000000000001s以内)按照他的规则比较地球人熟悉的两个十进制数字的大小，他比较的规则如下：

 

1、将要比较的两个数字分别转换成二进制数字；

 

2、计算两个二进制数字中1的个数，个数多的数字为两者中的大者；

 

3、负数按照其绝对值进行比较；

 

请利用地球人发明的计算机程序逼近都教授的特异功能，实现时可以有以下约束：

 

1、输入数据为范围在-32768到32768(地球人的十进制世界）之间的任意两个数字；

 

2、如果经过比较后2个数相等，输出为0，如果不相等，输出最大值。如果输入非法，输出-1。

 
题目类别: 	语言基础,字符串,循环,函数,指针,枚举,位运算,结构体,联合体,文件操作,递归
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

待比较的2个数。
输出: 	

按照比较原则，输出最大的值
样例输入: 	

-30
20

样例输出: 	

-30

答案提示: 	

0429-2
洞穴逃生
描述: 	
b
精灵王子爱好冒险，在一次探险历程中，他进入了一个神秘的山洞。在洞穴深处，精灵王子不小心触动了洞穴内暗藏的机关，整个洞穴将很快塌陷，精灵王子必须尽快逃离洞穴。精灵王子的跑步速度为17m/s，以这样的速度可能是无法逃出洞穴的。庆幸的是精灵王子拥有闪烁法术，可在1s内移动60m，不过每次使用闪烁法术都会消耗魔法值10点。精灵王子的魔法值恢复的速度为4点/s，只有处在原地休息状态时才能恢复。

现在已知精灵王子的魔法初值M，他所在洞穴中的位置与洞穴出口之间的距离S，距离洞穴塌陷的时间T。你的任务是写一个程序帮助精灵王子计算如何在最短的时间内逃离洞穴。若能逃出，输出"Yes"，并输出逃出所用的最短时间；若不能逃出，则输出"No"，同时输出精灵王子在剩下的时间内能走的最远距离。注意字母大小写。注意:精灵王子跑步、闪烁或休息活动均以秒(s)为单位。且每次活动的持续时间为整数秒。距离的单位为米(m)。

注：M、S、T均是大于等于0的整数。由输入保证取值合法性，考生不用检查。

提醒：

如果输入的S为0，则说明本身已经在出口，输出应为：Yes 0

如果输入的T为0（且S不为0），则说明已经没有时间了，输出应为：No 0

 
题目类别: 	循环
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

输入格式:
M
S
T
输出: 	

输出格式：
Yes 逃出洞穴所用的最短时间
或
No 在洞穴塌陷前能逃跑的最远距离
样例输入: 	

10

50

5

样例输出: 	

Yes 1

答案提示: 	

2014-05-09
-----------------------------------------------------------
外星人比数的大小
描述: 	
来自星星的都教授除了所有感官比地球人高出七倍，始终容颜不老以外，还拥有一项在地球人看来特别神奇的能力，他会瞬间(0.00000000000000000000001s以内)按照他的规则比较地球人熟悉的两个十进制数字的大小，他比较的规则如下：
1、将要比较的两个数字分别转换成二进制数字；
2、计算两个二进制数字中1的个数，个数多的数字为两者中的大者；
3、负数按照其绝对值进行比较；
请利用地球人发明的计算机程序逼近都教授的特异功能，实现时可以有以下约束：
1、输入数据为范围在-32768到32768(地球人的十进制世界）之间的任意两个数字；
2、如果经过比较后2个数相等，输出为0，如果不相等，输出最大值。如果输入非法，输出-1。
 
题目类别: 	语言基础,字符串,循环,函数,指针,枚举,位运算,结构体,联合体,文件操作,递归
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	
待比较的2个数。
输出: 	
按照比较原则，输出最大的值
样例输入: 	
-30
20
样例输出: 	
-30
答案提示: 	
2014-05-09-2
对数计数器
描述: 	

小明在使用一个计数器，计数范围0~999999，小明第一次看计数器的时候，其读数为一个对数（即正反读是一样的，如12321），当出现下一个对数的时候，小明停止了计数。
输入小明看到的第一个对数，请输出计数数量（即第二个对数跟第一个对数的差值）。注意，计数器达到999999后，会重新从0开始。
题目类别: 	循环,查找
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	
输入一个整数0~999999
输出: 	
输出计数数量，非负整数
样例输入: 	
123321
样例输出: 	
1100
答案提示: 	

-----------------------------------------------------------------------
2014-05-12-1
密码截取
描述: 	
Catcher是MCA国的情报员，他工作时发现敌国会用一些对称的密码进行通信，比如像这些ABBA，ABA，A，123321，但是他们有时会在开始或结束时加入一些无关的字符以防止别国破解。比如进行下列变化 ABBA->12ABBA,ABA->ABAKK,123321->51233214　。因为截获的串太长了，而且存在多种可能的情况（abaaab可看作是aba,或baaab的加密形式），Cathcer的工作量实在是太大了，他只能向电脑高手求助，你能帮Catcher找出最长的有效密码串吗？
题目类别: 	字符串,循环
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	
字符串-密码内容
输出: 	
整形数-有效密码串最大长度
样例输入: 	
ABBA
样例输出: 	
4
答案提示: 	
2014-05-12-2
竞赛积分猜想
描述: 	

某公司举办了知识竞赛。题目的计分规则如下：
1.每位选手需要回答10个问题（其编号为1到10），越后面越有难度。答对的，当前得到的分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。
2.每位选手都有一个起步的分数为10分。 
程序要求：
如果某获胜选手最终得分是X分，如果不让你看比赛过程，请推断出他（她）哪个题目答对了，哪个题目答错了吗？把答对的题目记为1，答错的记为0，则10个题目的回答情况可以用仅含有1和0的串来表示。例如：0010110011 就是一种可能的情况，10道题目的编号从左到右依次排列。

你的任务是算出满足该得分的所有可能情况，答案之间用|号分隔，并且答案需要进行排序，将答案转换为十进制后数字小的排在前面，即0010110011应该排在1010110011的前面。如果不存在满足该分数的情况，则输出10个0:0000000000
题目类别: 	循环,链表,排序,函数
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	
选手的得分，正整数。
输出: 	
满足输入得分的所有可能的情况，答案之间用|号分隔，并且答案需要进行排序，将答案转换为十进制后数字小的排在前面，即0010110011应该排在1010110011的前面。如果不存在满足该分数的情况，则输出10个0:0000000000
样例输入: 	
100
样例输出: 	
0010110011|0111010000|1011010000
答案提示: 	

2014-05-13-2
计算日期
描述: 	
功能: 根据距离2000年1月1日的天数，计算年月日
输入: 
    距离2000年1月1日的天数，>= 0
输出:
    对应的年月日
题目类别: 	函数
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 距离2000年1月1日的天数
输出: 对应的年月日（换行输出）
样例输入: 100
样例输出: 
2000
4
10

20140515-01
IP地址最大前缀匹配
描述: 	

在路由器中，一般来说转发模块采用最大前缀匹配原则进行目的端口查找，具体如下： 
IP地址和子网地址匹配：IP地址和子网地址所带掩码做AND运算后，得到的值与子网地址相同，则该IP地址与该子网匹配。
比如：
IP地址：192.168.1.100
子网：192.168.1.0/255.255.255.0，其中192.168.1.0是子网地址，255.255.255.0是子网掩码。
192.168.1.100&255.255.255.0 = 192.168.1.0，则该IP和子网192.168.1.0匹配 

IP地址：192.168.1.100
子网：192.168.1.128/255.255.255.192
192.168.1.100&255.255.255.192 = 192.168.1.64，则该IP和子网192.168.1.128不匹配
 
最大前缀匹配：
任何一个IPv4地址都可以看作一个32bit的二进制数，比如192.168.1.100可以表示为：11000000.10101000.00000001.01100100，
192.168.1.0可以表示为11000000.10101000.00000001.00000000
最大前缀匹配要求IP地址同子网地址匹配的基础上，二进制位从左到右完全匹配的位数尽量多（从左到右子网地址最长）。比如：
IP地址192.168.1.100，同时匹配子网192.168.1.0/255.255.255.0和子网192.168.1.64/255.255.255.192，
但对于子网192.168.1.64/255.255.255.192，匹配位数达到26位，多于子网192.168.1.0/255.255.255.0的24位，
因此192.168.1.100最大前缀匹配子网是192.168.1.64/255.255.255.192。

请编程实现上述最大前缀匹配算法。

 
题目类别: 	字符串
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

IP地址，用例保证是合法IPv4地址形式的字符串
子网地址数量
子网地址列表，每行一个子网，包括子网地址和掩码，用'/'分开。用例保证是合法形式的字符串。
输出: 	

最大前缀匹配位数
样例输入: 	

192.168.1.100
4
192.168.1.128/255.255.255.192
192.168.1.0/255.255.255.0
192.168.1.64/255.255.255.192
0.0.0.0/0.0.0.0

样例输出: 	

26

答案提示: 	

20140515-02
字符串扩充
描述: 	

输入一个字符串，对这个字符串按照下面的规则进行扩充：

1、先遍历字符串，如果碰到小写字母's'则将小写字母's'前的字符串挪到字符串末尾，并删除小写字母's'，再继续处理，直到字符串中没有小写字母's'；

2、再对处理后的字符串进行扩充，扩充规则如下，字符串中的第n个字符（n从0开始）从1个扩充为n+1个相同的字符；

3、对扩充后的字符按照ASCII从小到大的顺序排序。
b
输出完成上面3步处理后的字符串。
题目类别: 	字符串
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

字符串，长度不超过255.
输出: 	

处理后的字符串
样例输入: 	

abc

样例输出: 	

abbccc

答案提示:

2014-06-08-1
把一个字符串，交换前后顺序后再输出
描述: 	

把一个字符串，交换前后顺序后再输出
题目类别: 	数组
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

字符串
输出: 	

字符串
样例输入: 	

abcde

样例输出: 	

edcba

答案提示: 	

编写一个main函数实现该功能算法。

2014-06-08-2
同网CS
描述: 	

小明同学最近新购置了电脑，想和其他同学玩CS，但是建了局域网游戏之后，别人加不进来，自己也进不了别人的主机，非常苦恼。于是来请教同宿舍的“科技怪人”小犀，小犀说了句“你的IP和我们不在同一个子网”就闪了，小明百度了一下，搜到如下关于“子网掩码”的信息：子网掩码是用来判断任意两台计算机的IP地址是否属于同一子网络的根据。最为简单的理解就是两台计算机各自的IP地址与子网掩码进行AND运算后，如果得出的结果是相同的，则说明这两台计算机是处于同一个子网里面，可以进行直接的通讯。

运算演示之一：

I P 地址　 192.168.0.1

子网掩码　 255.255.255.0

转化为二进制进行运算：

I P 地址　11010000.10101000.00000000.00000001

子网掩码　11111111.11111111.11111111.00000000

AND运算

　　　　　11010000.10101000.00000000.00000000

转化为十进制后为：

　　　　　　192.168.0.0

运算演示之二：

I P 地址　 192.168.0.254

子网掩码　 255.255.255.0

转化为二进制进行运算：

I P 地址　11010000.10101000.00000000.11111110

子网掩码　11111111.11111111.11111111.00000000

AND运算

　　　　　11010000.10101000.00000000.00000000

转化为十进制后为：

　　　　　　192.168.0.0

运算演示之三：

I P 地址　 192.168.0.4

子网掩码　 255.255.255.0

转化为二进制进行运算：

I P 地址　11010000.10101000.00000000.00000100

子网掩码　11111111.11111111.11111111.00000000

AND运算

　　　　　11010000.10101000.00000000.00000000

转化为十进制后为：

　　　　　　192.168.0.0

通过以上对三组计算机IP地址与子网掩码的AND运算后，我们可以看到它运算结果是一样的。均为192.168.0.0

所以计算机就会把这三台计算机视为是同一子网。

小明灵机一动，打算做一个帮助大家解决局域网游戏问题的工具，设想如下：

我知道我的电脑的IP和子网掩码，又知道另外几个同学的ip地址，通过这个工具就可以知道我可以和谁一起CS。

IP寻址规则：

A.网络标识不能数值127开头(在A类地址中127.0.0.1是loopback IP)

B.网络标识第一个字节不能是255和0

C.IP每个字段不能大于255

子网掩码：

A. 不能全部是255;

B. 不能全部是0；

C. 掩码的高位(bit)必须是连续的1； 例如 ： 255.255.252.0 --> 11111111.11111111.11111100.00000000 按照Bit来看1和0的位必须是连续的，而掩码高位都是1，所以有时候会见到 错误 ： 255.255.253.0 --> 11111111.11111111.11111101.00000000 这里就出现bit为1但没有连续的情况，这种掩码是不正确的

 





题目类别: 	字符串
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

第一行是我的电脑的IP地址


第二行是我的电脑的子网掩码


第三行整数N，表示后面N个同学的IP地址


第1个同学的IP地址


......


第N个同学的IP地址
输出: 	

计算并输出N个IP地址是否与我的电脑在同一子网内。


对于在同一子网的输出：let's rock


对于在不同子网的输出：not you


对于无效的联网IP输出：Invalid IP adress.


对于无效的子网掩码：Invalid netmask adress.
样例输入: 	

192.168.0.1
255.255.255.0
3
192.168.0.2
192.168.0.200
192.168.2.2

样例输出: 	

let's rock
let's rock
not you

答案提示: 	

 参考测试用例：

测试用例1：
输入：
10.123.12.7
255.0.0.0
3
10.121.234.1
192.168.19.9
10.124.123.2
输出：
let's rock
not you
let's rock
测试用例2：
输入：
192.168.29.1
255.255.255.0
2
127.0.0.1
192.168.29.100
输出：
Invalid IP adress.
let's rock
测试用例3：
输入：
10.144.240.73
255.252.253.0
输出：
Invalid netmask adress.
测试用例4：
输入：
10.144.240.73
0.0.0.0
输出：
Invalid netmask adress.
测试用例5：
输入：
10.146.240.256
输出：
Invalid IP adress.
测试用例6：
输入：
255.148.240.1
输出：
Invalid IP adress.
测试用例7：
输入：
0.147.240.15
输出：
Invalid IP adress.

2014-06-09-1
数组相加
描述: 	

把a数组中的n个数和b数组中逆序的n个数一一对应相加,结果存在c数组中。
例如a数组中的值是: 1 3 5 7 8,b数组中的值是: 2 3 4 5 8，调用该函数后, c数组中存放的数据是9 8 9 10 10
题目类别: 	字符串,数组
难度: 	初级
分数: 	60
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

数组a 数组b，两个数组间以“;”（半角）分隔

数组元素以一个空格分隔，没有任何括号，如 1 2 3

数组a和数组b元素个数一致

输入的两个数组总长度不超过128
输出: 	

合并后的新数组c

数组元素以一个空格分隔，没有任何括号，如 3 2 1

所有异常情况（如输入一个或超过两个数组、数组元素非数字、两个数组元素个数不一致等），均输出0

 
样例输入: 	

1 2 3 4;4 3 2 1

样例输出: 	

2 4 6 8

答案提示: 	

2014-06-09-2
汉诺塔移动步骤
描述: 	

1,2,...,n 表示n 个盘子．数字大盘子就大．n 个盘子放在第１根柱子上．大盘不能放在小盘上．把n 个盘子移动到第3 根柱子．每次只能移动1 个盘子，且大盘不能放在小盘上．

问第m 次移动的是哪一个盘子，从哪根柱子移到哪根柱子.

例如：n=3,m=2. 回答是 ：2 1 2，即移动的是2 号盘，从第1 根柱子移动到第2 根柱子 。
题目类别: 	循环
难度: 	中级
分数: 	100
运行时间限制: 	无限制
内存限制: 	无限制
阶段: 	应聘考试
输入: 	

连续两个正整数，以空格隔开。

第一个表示n，一共有多少个盘子。

第二个表示m,表示第m次移动。
输出: 	

连续三个数字,用空格分开。如：2 1 2

第一个数字表示移动的盘子编号。

第二，三个数字表示从哪个柱子移动到哪个柱子。初始柱子为1，终点柱子为3
样例输入: 	

3 2

样例输出: 	

2 1 2

答案提示: 	

一号柱有n 个盘子,叫做源柱.移往3 号柱,叫做目的柱.2 号柱叫做中间柱.
全部移往3 号柱要f(n) =（2^n）- 1 次.
最大盘n 号盘在整个移动过程中只移动一次,n-1 号移动2 次,i 号盘移动
2^(n-i)次.
1 号盘移动次数最多,每2 次移动一次.
第2k+1 次移动的是1 号盘,且是第k+1 次移动1 号盘.
第4k+2 次移动的是2 号盘,且是第k+1 次移动2 号盘.
......
第(2^s)k+2^(s-1)移动的是s 号盘,这时s 号盘已被移动了k+1 次.
每2^s 次就有一次是移动s 号盘.
第一次移动s 号盘是在第2^(s-1)次.
第二次移动s 号盘是在第2^s+2^(s-1)次.
......
第k+1 次移动s 号盘是在第k*2^s+2^(s-1)次.
1--2--3--1 叫做顺时针方向,1--3--2--1 叫做逆时针方向.
最大盘n 号盘只移动一次:1--3,它是逆时针移动.
n-1 移动2 次:1--2--3,是顺时针移动.
如果n 和k 奇偶性相同,则k 号盘按逆时针移动,否则顺时针.
